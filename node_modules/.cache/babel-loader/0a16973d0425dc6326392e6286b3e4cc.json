{"ast":null,"code":"var _jsxFileName = \"/Users/Moe/Desktop/react-giphy-api/react-giphy-api/src/components/SearchField.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\"; //import GifCard from \"./components/GifCard\";\n\nclass SearchField extends Component {\n  constructor(props) {\n    super(props);\n\n    this.inputSearch = event => {\n      this.setState({\n        search: event.target.value,\n        filterBy: \"regular\"\n      });\n    };\n\n    this.state = {\n      search: \"\",\n      filterBy: \"\" //regular, trending, random\n      //gifs: []\n\n    };\n  }\n\n  componentDidMount() {\n    //const search = this.props.search;\n    const API_KEY = process.env.REACT_APP_GIPHY_API_KEY; //const regSearch = 'http://api.giphy.com/v1/gifs/search?q=${search}&api_key=${API_KEY}';\n\n    const regSearch = 'http://api.giphy.com/v1/gifs/search?q=' + this.props.search + '&api_key=' + API_KEY; //const trendSearch = 'http://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}';\n    //const randSearch = 'http://api.giphy.com/v1/gifs/random?api_key=${API_KEY}';\n\n    axios.get(regSearch).then(response => {\n      const data = response.data;\n      console.log(data);\n      const newGif = {\n        title: data.data[0].title,\n        imageUrl: data.data[0].images.original.url\n      };\n      this.setState({\n        search: newGif\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    let display;\n    let options = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      searchTerm: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.inputSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"Regular Search\")), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Trending Search\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Random Search\"));\n\n    if (!this.state.search) {\n      display = /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }\n      }, \"Loading...\");\n    } else {\n      display = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n        src: this.state.search.imageUrl,\n        alt: this.state.search.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, this.state.search.title, \" \")));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, options), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SearchField\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, display));\n  }\n\n}\n\nexport default SearchField;","map":{"version":3,"sources":["/Users/Moe/Desktop/react-giphy-api/react-giphy-api/src/components/SearchField.js"],"names":["React","Component","axios","SearchField","constructor","props","inputSearch","event","setState","search","target","value","filterBy","state","componentDidMount","API_KEY","process","env","REACT_APP_GIPHY_API_KEY","regSearch","get","then","response","data","console","log","newGif","title","imageUrl","images","original","url","catch","err","render","display","options"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAClCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkCjBC,WAlCiB,GAkCFC,KAAD,IAAW;AACvB,WAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAEF,KAAK,CAACG,MAAN,CAAaC,KADT;AAEZC,QAAAA,QAAQ,EAAE;AAFE,OAAd;AAID,KAvCgB;;AAEjB,SAAKC,KAAL,GAAa;AACXJ,MAAAA,MAAM,EAAE,EADG;AAEXG,MAAAA,QAAQ,EAAE,EAFC,CAEG;AACd;;AAHW,KAAb;AAKD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAA5B,CAFkB,CAGlB;;AACA,UAAMC,SAAS,GAAG,2CAA2C,KAAKd,KAAL,CAAWI,MAAtD,GAA+D,WAA/D,GAA6EM,OAA/F,CAJkB,CAKlB;AACA;;AAEAb,IAAAA,KAAK,CACFkB,GADH,CACOD,SADP,EAEGE,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,YAAMG,MAAM,GAAG;AACbC,QAAAA,KAAK,EAAEJ,IAAI,CAACA,IAAL,CAAU,CAAV,EAAaI,KADP;AAEbC,QAAAA,QAAQ,EAAEL,IAAI,CAACA,IAAL,CAAU,CAAV,EAAaM,MAAb,CAAoBC,QAApB,CAA6BC;AAF1B,OAAf;AAKA,WAAKvB,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAEiB;AAAV,OAAd;AACD,KAbH,EAcGM,KAdH,CAcUC,GAAD,IAAST,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CAdlB;AAeC;;AASDC,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAJ;AACA,QAAIC,OAAO,gBACT,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,UAAU,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,OAAO,EAAE,KAAK9B,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CADA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANA,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPA,CADF;;AAYA,QAAI,CAAC,KAAKO,KAAL,CAAWJ,MAAhB,EAAwB;AACtB0B,MAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAV;AACD,KAFD,MAGK;AACHA,MAAAA,OAAO,gBACL,uDACE;AACE,QAAA,GAAG,EAAE,KAAKtB,KAAL,CAAWJ,MAAX,CAAkBmB,QADzB;AAEE,QAAA,GAAG,EAAE,KAAKf,KAAL,CAAWJ,MAAX,CAAkBkB,KAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKd,KAAL,CAAWJ,MAAX,CAAkBkB,KAAvB,MADF,CALF,CADF;AAWD;;AAED,wBACE,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMS,OAAN,CADA,eAEA;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BD,OAA9B,CAFA,CADF;AAMD;;AA/E+B;;AAkFpC,eAAehC,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n//import GifCard from \"./components/GifCard\";\n\nclass SearchField extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      search: \"\",\n      filterBy: \"\", //regular, trending, random\n      //gifs: []\n    };\n  }\n\n  componentDidMount() {\n    //const search = this.props.search;\n    const API_KEY = process.env.REACT_APP_GIPHY_API_KEY;\n    //const regSearch = 'http://api.giphy.com/v1/gifs/search?q=${search}&api_key=${API_KEY}';\n    const regSearch = 'http://api.giphy.com/v1/gifs/search?q=' + this.props.search + '&api_key=' + API_KEY\n    //const trendSearch = 'http://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}';\n    //const randSearch = 'http://api.giphy.com/v1/gifs/random?api_key=${API_KEY}';\n\n    axios\n      .get(regSearch)\n      .then((response) => {\n        const data = response.data;\n \n        console.log(data);\n\n        const newGif = {\n          title: data.data[0].title,\n          imageUrl: data.data[0].images.original.url,\n        };\n\n        this.setState({ search: newGif });\n      })\n      .catch((err) => console.log(err));\n    }\n\n    inputSearch = (event) => {\n      this.setState({ \n        search: event.target.value,\n        filterBy: \"regular\"\n      });\n    }\n\n    render() {\n      let display;\n      let options = (\n        <>\n        <form>\n          <input type=\"text\" searchTerm=\"search\"/>\n          <button onClick={this.inputSearch}>Regular Search</button>\n        </form>\n        \n        <button>Trending Search</button>\n        <button>Random Search</button>\n        </>\n      );\n\n      if (!this.state.search) {\n        display = <p>Loading...</p>;\n      } \n      else {\n        display = (\n          <>\n            <img\n              src={this.state.search.imageUrl}\n              alt={this.state.search.title}\n            />\n            <ul>\n              <li>{this.state.search.title} </li>\n            </ul>\n          </>\n        );\n      }\n  \n      return (\n        <>\n        <div>{options}</div>\n        <div className=\"SearchField\">{display}</div>\n        </>\n      );\n    }\n}\n\nexport default SearchField;\n"]},"metadata":{},"sourceType":"module"}