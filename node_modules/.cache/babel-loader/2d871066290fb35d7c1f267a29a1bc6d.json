{"ast":null,"code":"var _jsxFileName = \"/Users/Moe/Desktop/react-giphy-api/react-giphy-api/src/components/SearchField.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\"; //import GifCard from \"./components/GifCard\";\n\nclass SearchField extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getGiphy = () => {\n      const API_KEY = process.env.REACT_APP_GIPHY_API_KEY; //const regSearch = 'http://api.giphy.com/v1/gifs/search?q=${search}&api_key=${API_KEY}';\n\n      const regSearch = \"http://api.giphy.com/v1/gifs/search?q=\" + this.props.search + \"&api_key=\" + API_KEY; //const trendSearch = 'http://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}';\n      //const randSearch = 'http://api.giphy.com/v1/gifs/random?api_key=${API_KEY}';\n\n      console.log(regSearch);\n      axios.get(regSearch).then(response => {\n        const data = response.data;\n        console.log(data);\n        const newGif = data.map(d => {\n          return {\n            title: d.title,\n            imageUrl: d.images.original.url\n          };\n        });\n        this.setState({\n          result: newGif\n        });\n        console.log(this.state.result);\n        /** title: d.title,\n            imageUrl: d.images.original.url, */\n      }).catch(err => console.log(err));\n    };\n\n    this.inputSearch = event => {\n      this.setState({\n        search: event.target.value,\n        filterBy: \"regular\"\n      });\n    };\n\n    this.setSearch = e => {\n      this.setState({\n        search: e.target.value\n      });\n    };\n\n    this.state = {\n      search: \"\",\n      result: [],\n      filterBy: \"\" //regular, trending, random\n      //gifs: []\n\n    };\n  } // componentDidMount() {\n  //   //const search = this.props.search;\n  //   const API_KEY = process.env.REACT_APP_GIPHY_API_KEY;\n  //   //const regSearch = 'http://api.giphy.com/v1/gifs/search?q=${search}&api_key=${API_KEY}';\n  //   const regSearch =\n  //     \"http://api.giphy.com/v1/gifs/search?q=\" +\n  //     this.props.search +\n  //     \"&api_key=\" +\n  //     API_KEY;\n  //   //const trendSearch = 'http://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}';\n  //   //const randSearch = 'http://api.giphy.com/v1/gifs/random?api_key=${API_KEY}';\n  //   axios\n  //     .get(regSearch)\n  //     .then((response) => {\n  //       const data = response.data;\n  //       console.log(data);\n  //       const newGif = {\n  //         title: data.data[0].title,\n  //         imageUrl: data.data[0].images.original.url,\n  //       };\n  //       this.setState({ search: newGif });\n  //     })\n  //     .catch((err) => console.log(err));\n  // }\n\n\n  render() {\n    let display;\n    let options = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"Trending Search\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, \"Random Search\"));\n\n    if (this.state.result) {\n      display = this.state.result.map(e => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n          src: e.imageUrl,\n          alt: e.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }\n        }, e.title, \" \")));\n      });\n    } else {\n      display = /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.setSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.getGiphy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, \"Regular Search\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SearchField\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, display));\n  }\n\n}\n\nexport default SearchField;","map":{"version":3,"sources":["/Users/Moe/Desktop/react-giphy-api/react-giphy-api/src/components/SearchField.js"],"names":["React","Component","axios","SearchField","constructor","props","getGiphy","API_KEY","process","env","REACT_APP_GIPHY_API_KEY","regSearch","search","console","log","get","then","response","data","newGif","map","d","title","imageUrl","images","original","url","setState","result","state","catch","err","inputSearch","event","target","value","filterBy","setSearch","e","render","display","options"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n//import GifCard from \"./components/GifCard\";\n\nclass SearchField extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      result: [],\n      filterBy: \"\", //regular, trending, random\n      //gifs: []\n    };\n  }\n\n  // componentDidMount() {\n  //   //const search = this.props.search;\n  //   const API_KEY = process.env.REACT_APP_GIPHY_API_KEY;\n  //   //const regSearch = 'http://api.giphy.com/v1/gifs/search?q=${search}&api_key=${API_KEY}';\n  //   const regSearch =\n  //     \"http://api.giphy.com/v1/gifs/search?q=\" +\n  //     this.props.search +\n  //     \"&api_key=\" +\n  //     API_KEY;\n  //   //const trendSearch = 'http://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}';\n  //   //const randSearch = 'http://api.giphy.com/v1/gifs/random?api_key=${API_KEY}';\n\n  //   axios\n  //     .get(regSearch)\n  //     .then((response) => {\n  //       const data = response.data;\n\n  //       console.log(data);\n\n  //       const newGif = {\n  //         title: data.data[0].title,\n  //         imageUrl: data.data[0].images.original.url,\n  //       };\n\n  //       this.setState({ search: newGif });\n  //     })\n  //     .catch((err) => console.log(err));\n  // }\n\n  getGiphy = () => {\n    const API_KEY = process.env.REACT_APP_GIPHY_API_KEY;\n    //const regSearch = 'http://api.giphy.com/v1/gifs/search?q=${search}&api_key=${API_KEY}';\n    const regSearch =\n      \"http://api.giphy.com/v1/gifs/search?q=\" +\n      this.props.search +\n      \"&api_key=\" +\n      API_KEY;\n    //const trendSearch = 'http://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}';\n    //const randSearch = 'http://api.giphy.com/v1/gifs/random?api_key=${API_KEY}';\n    console.log(regSearch);\n    axios\n      .get(regSearch)\n      .then((response) => {\n        const data = response.data;\n\n        console.log(data);\n        const newGif = data.map((d) => {\n          return {\n            title: d.title,\n            imageUrl: d.images.original.url,\n          };\n        });\n\n        this.setState({ result: newGif });\n        console.log(this.state.result);\n\n        /** title: d.title,\n            imageUrl: d.images.original.url, */\n      })\n      .catch((err) => console.log(err));\n  };\n\n  inputSearch = (event) => {\n    this.setState({\n      search: event.target.value,\n      filterBy: \"regular\",\n    });\n  };\n\n  setSearch = (e) => {\n    this.setState({ search: e.target.value });\n  };\n\n  render() {\n    let display;\n    let options = (\n      <>\n        <button>Trending Search</button>\n        <button>Random Search</button>\n      </>\n    );\n\n    if (this.state.result) {\n      display = this.state.result.map((e) => {\n        return (\n          <>\n            <img src={e.imageUrl} alt={e.title} />\n            <ul>\n              <li>{e.title} </li>\n            </ul>\n          </>\n        );\n      });\n    } else {\n      display = <p>Loading...</p>;\n    }\n\n    return (\n      <>\n        <div>\n          <form>\n            <input type=\"text\" onChange={this.setSearch} />\n            <button onClick={this.getGiphy}>Regular Search</button>\n          </form>\n        </div>\n        <div className=\"SearchField\">{display}</div>\n      </>\n    );\n  }\n}\n\nexport default SearchField;\n"]},"metadata":{},"sourceType":"module"}