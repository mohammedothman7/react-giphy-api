{"ast":null,"code":"var _jsxFileName = \"/Users/Moe/Desktop/react-giphy-api/react-giphy-api/src/components/SearchField.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport GifCard from \"./GifCard\"; //import GifCard from \"./components/GifCard\";\n\nclass SearchField extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getGiphy = () => {\n      console.log(\"In get giphy\");\n      const API_KEY = process.env.REACT_APP_GIPHY_API_KEY;\n      let regSearch;\n      console.log(this.state.filterBy);\n\n      if (this.state.filterBy === \"search\") {\n        regSearch = `http://api.giphy.com/v1/gifs/search?q=${this.state.search}&api_key=${API_KEY}`;\n      } else if (this.state.filterBy === \"trending\") {\n        regSearch = `http://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}`;\n      } else {\n        regSearch = `http://api.giphy.com/v1/gifs/random?api_key=${API_KEY}`;\n      }\n\n      console.log(\"regSearch\", regSearch);\n      axios.get(regSearch).then(response => {\n        let data = response.data;\n        let newGif, currentGif;\n        console.log(\"data\", data.data);\n\n        if (this.state.filterBy === \"random\") {\n          currentGif = Array.from(data.data);\n          console.log(\"ok....\", data);\n        } else {\n          currentGif = data.data;\n        }\n\n        console.log(\"currentGif\", currentGif);\n        newGif = currentGif.map(e => {\n          return {\n            title: e.title,\n            imageUrl: e.images.original.url\n          };\n        });\n        this.setState({\n          result: newGif\n        });\n        console.log(this.state.result);\n        /** title: d.title,\n            imageUrl: d.images.original.url, */\n      }).catch(err => console.log(err));\n    };\n\n    this.getTrending = () => {};\n\n    this.inputSearch = event => {\n      this.setState({\n        search: event.target.value,\n        filterBy: \"regular\"\n      });\n    };\n\n    this.setSearch = e => {\n      this.setState({\n        search: e.target.value,\n        filterBy: \"search\"\n      });\n    };\n\n    this.setTrending = e => {\n      this.setState({\n        filterBy: \"trending\"\n      }, this.getGiphy);\n    };\n\n    this.setRandom = () => {\n      this.setState({\n        filterBy: \"random\"\n      }, this.getGiphy);\n    };\n\n    this.state = {\n      search: \"\",\n      result: [],\n      filterBy: \"\" //regular, trending, random\n      //gifs: []\n\n    };\n  } // componentDidMount() {\n  //   //const search = this.props.search;\n  //   const API_KEY = process.env.REACT_APP_GIPHY_API_KEY;\n  //   //const regSearch = 'http://api.giphy.com/v1/gifs/search?q=${search}&api_key=${API_KEY}';\n  //   const regSearch =\n  //     \"http://api.giphy.com/v1/gifs/search?q=\" +\n  //     this.props.search +\n  //     \"&api_key=\" +\n  //     API_KEY;\n  //   //const trendSearch = 'http://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}';\n  //   //const randSearch = 'http://api.giphy.com/v1/gifs/random?api_key=${API_KEY}';\n  //   axios\n  //     .get(regSearch)\n  //     .then((response) => {\n  //       const data = response.data;\n  //       console.log(data);\n  //       const newGif = {\n  //         title: data.data[0].title,\n  //         imageUrl: data.data[0].images.original.url,\n  //       };\n  //       this.setState({ search: newGif });\n  //     })\n  //     .catch((err) => console.log(err));\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"textarea\",\n      onChange: this.setSearch,\n      value: this.state.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.getGiphy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, \"Regular Search\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.setTrending,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, \"Trending Search\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.setRandom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, \"Random Search\")), /*#__PURE__*/React.createElement(GifCard, {\n      search: this.state.search,\n      result: this.state.result,\n      filterBy: this.state.filterBy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default SearchField;","map":{"version":3,"sources":["/Users/Moe/Desktop/react-giphy-api/react-giphy-api/src/components/SearchField.js"],"names":["React","Component","axios","GifCard","SearchField","constructor","props","getGiphy","console","log","API_KEY","process","env","REACT_APP_GIPHY_API_KEY","regSearch","state","filterBy","search","get","then","response","data","newGif","currentGif","Array","from","map","e","title","imageUrl","images","original","url","setState","result","catch","err","getTrending","inputSearch","event","target","value","setSearch","setTrending","setRandom","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport GifCard from \"./GifCard\";\n//import GifCard from \"./components/GifCard\";\n\nclass SearchField extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      result: [],\n      filterBy: \"\", //regular, trending, random\n      //gifs: []\n    };\n  }\n\n  // componentDidMount() {\n  //   //const search = this.props.search;\n  //   const API_KEY = process.env.REACT_APP_GIPHY_API_KEY;\n  //   //const regSearch = 'http://api.giphy.com/v1/gifs/search?q=${search}&api_key=${API_KEY}';\n  //   const regSearch =\n  //     \"http://api.giphy.com/v1/gifs/search?q=\" +\n  //     this.props.search +\n  //     \"&api_key=\" +\n  //     API_KEY;\n  //   //const trendSearch = 'http://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}';\n  //   //const randSearch = 'http://api.giphy.com/v1/gifs/random?api_key=${API_KEY}';\n\n  //   axios\n  //     .get(regSearch)\n  //     .then((response) => {\n  //       const data = response.data;\n\n  //       console.log(data);\n\n  //       const newGif = {\n  //         title: data.data[0].title,\n  //         imageUrl: data.data[0].images.original.url,\n  //       };\n\n  //       this.setState({ search: newGif });\n  //     })\n  //     .catch((err) => console.log(err));\n  // }\n\n  getGiphy = () => {\n    console.log(\"In get giphy\");\n    const API_KEY = process.env.REACT_APP_GIPHY_API_KEY;\n    let regSearch;\n    console.log(this.state.filterBy);\n    if (this.state.filterBy === \"search\") {\n      regSearch = `http://api.giphy.com/v1/gifs/search?q=${this.state.search}&api_key=${API_KEY}`;\n    } else if (this.state.filterBy === \"trending\") {\n      regSearch = `http://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}`;\n    } else {\n      regSearch = `http://api.giphy.com/v1/gifs/random?api_key=${API_KEY}`;\n    }\n    console.log(\"regSearch\", regSearch);\n    axios\n      .get(regSearch)\n      .then((response) => {\n        let data = response.data;\n        let newGif, currentGif;\n        console.log(\"data\", data.data);\n        if (this.state.filterBy === \"random\") {\n          currentGif = Array.from(data.data);\n          console.log(\"ok....\", data);\n        } else {\n          currentGif = data.data;\n        }\n        console.log(\"currentGif\", currentGif);\n        newGif = currentGif.map((e) => {\n          return {\n            title: e.title,\n            imageUrl: e.images.original.url,\n          };\n        });\n\n        this.setState({ result: newGif });\n        console.log(this.state.result);\n\n        /** title: d.title,\n            imageUrl: d.images.original.url, */\n      })\n      .catch((err) => console.log(err));\n  };\n\n  getTrending = () => {};\n\n  inputSearch = (event) => {\n    this.setState({\n      search: event.target.value,\n      filterBy: \"regular\",\n    });\n  };\n\n  setSearch = (e) => {\n    this.setState({ search: e.target.value, filterBy: \"search\" });\n  };\n\n  setTrending = (e) => {\n    this.setState({ filterBy: \"trending\" }, this.getGiphy);\n  };\n\n  setRandom = () => {\n    this.setState({ filterBy: \"random\" }, this.getGiphy);\n  };\n\n  render() {\n    return (\n      <>\n        <div>\n          <input\n            type=\"textarea\"\n            onChange={this.setSearch}\n            value={this.state.search}\n          />\n          <button onClick={this.getGiphy}>Regular Search</button>\n          <button onClick={this.setTrending}>Trending Search</button>\n          <button onClick={this.setRandom}>Random Search</button>\n        </div>\n        <GifCard\n          search={this.state.search}\n          result={this.state.result}\n          filterBy={this.state.filterBy}\n        />\n      </>\n    );\n  }\n}\n\nexport default SearchField;\n"]},"metadata":{},"sourceType":"module"}