{"ast":null,"code":"var _jsxFileName = \"/Users/Moe/Desktop/react-giphy-api/react-giphy-api/src/components/SearchField.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport GifCard from \"./GifCard\"; //import GifCard from \"./components/GifCard\";\n\nclass SearchField extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getGiphy = () => {\n      /* Calls the giphy API and sends the correct URL \n      based on which button the user interacts with*/\n      const API_KEY = process.env.REACT_APP_GIPHY_API_KEY; // API key\n\n      let regSearch; // URL to send to API\n      // Filtering through state.filterBy to send correct URL\n\n      if (this.state.filterBy === \"search\") {\n        regSearch = `http://api.giphy.com/v1/gifs/search?q=${this.state.search}&api_key=${API_KEY}`;\n      } else if (this.state.filterBy === \"trending\") {\n        regSearch = `http://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}`;\n      } else {\n        regSearch = `http://api.giphy.com/v1/gifs/random?api_key=${API_KEY}`;\n      }\n\n      axios // Sending request to the API\n      .get(regSearch).then(response => {\n        let data = response.data;\n        let newGif, currentGif;\n        currentGif = []; // Array to hold the response from API\n\n        if (this.state.filterBy === \"random\") {\n          /* The random URL returns one object while the search and \n          trending return an array of objects, so we push that one object \n          into an array to keep the response as an array through \n          the whole program*/\n          currentGif.push(data.data);\n          console.log(\"ok....\", data);\n        } else {\n          // Pushing each object to currentGif array\n          data.data.map(e => {\n            return currentGif.push(e);\n          });\n        }\n        /* Retreiving title and imageURL from each object \n        and pushing into a newGif array */\n\n\n        newGif = currentGif.map(e => {\n          return {\n            title: e.title,\n            imageUrl: e.images.original.url\n          };\n        });\n        this.setState({\n          result: newGif\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.setSearch = e => {\n      // Sets the search state to text value\n      this.setState({\n        search: e.target.value\n      });\n    };\n\n    this.setSearchFilter = e => {\n      // Sets the filterBy state to 'search'\n      this.setState({\n        filterBy: \"search\"\n      }, this.getGiphy);\n    };\n\n    this.setTrending = e => {\n      // Sets the filterBy state to 'trending'\n      this.setState({\n        filterBy: \"trending\"\n      }, this.getGiphy);\n    };\n\n    this.setRandom = () => {\n      // Sets the filterBy state to 'trending'\n      this.setState({\n        filterBy: \"random\"\n      }, this.getGiphy);\n    };\n\n    this.setFilterBy = e => {\n      this.setState({\n        filterBy: e.target.value\n      }, this.getGiphy);\n    };\n\n    this.state = {\n      search: \"\",\n      result: [],\n      filterBy: \"\" //regular, trending, random\n      //gifs: []\n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"textarea\",\n      onChange: this.setSearch,\n      value: this.state.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.setFilterBy,\n      value: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, \"Regular Search\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.setFilterBy,\n      value: \"trending\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"Trending Search\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.setFilterBy,\n      value: \"random\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"Random Search\")), /*#__PURE__*/React.createElement(GifCard, {\n      search: this.state.search,\n      result: this.state.result,\n      filterBy: this.state.filterBy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default SearchField;","map":{"version":3,"sources":["/Users/Moe/Desktop/react-giphy-api/react-giphy-api/src/components/SearchField.js"],"names":["React","Component","axios","GifCard","SearchField","constructor","props","getGiphy","API_KEY","process","env","REACT_APP_GIPHY_API_KEY","regSearch","state","filterBy","search","get","then","response","data","newGif","currentGif","push","console","log","map","e","title","imageUrl","images","original","url","setState","result","catch","err","setSearch","target","value","setSearchFilter","setTrending","setRandom","setFilterBy","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,QAVmB,GAUR,MAAM;AACf;;AAEA,YAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAA5B,CAHe,CAGsC;;AACrD,UAAIC,SAAJ,CAJe,CAIA;AAEf;;AACA,UAAI,KAAKC,KAAL,CAAWC,QAAX,KAAwB,QAA5B,EAAsC;AACpCF,QAAAA,SAAS,GAAI,yCAAwC,KAAKC,KAAL,CAAWE,MAAO,YAAWP,OAAQ,EAA1F;AACD,OAFD,MAEO,IAAI,KAAKK,KAAL,CAAWC,QAAX,KAAwB,UAA5B,EAAwC;AAC7CF,QAAAA,SAAS,GAAI,iDAAgDJ,OAAQ,EAArE;AACD,OAFM,MAEA;AACLI,QAAAA,SAAS,GAAI,+CAA8CJ,OAAQ,EAAnE;AACD;;AAEDN,MAAAA,KAAK,CAAC;AAAD,OACFc,GADH,CACOJ,SADP,EAEGK,IAFH,CAESC,QAAD,IAAc;AAClB,YAAIC,IAAI,GAAGD,QAAQ,CAACC,IAApB;AACA,YAAIC,MAAJ,EAAYC,UAAZ;AACAA,QAAAA,UAAU,GAAG,EAAb,CAHkB,CAGD;;AACjB,YAAI,KAAKR,KAAL,CAAWC,QAAX,KAAwB,QAA5B,EAAsC;AACpC;;;;AAIAO,UAAAA,UAAU,CAACC,IAAX,CAAgBH,IAAI,CAACA,IAArB;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,IAAtB;AACD,SAPD,MAOO;AACL;AACAA,UAAAA,IAAI,CAACA,IAAL,CAAUM,GAAV,CAAeC,CAAD,IAAO;AACnB,mBAAOL,UAAU,CAACC,IAAX,CAAgBI,CAAhB,CAAP;AACD,WAFD;AAGD;AAED;;;;AAEAN,QAAAA,MAAM,GAAGC,UAAU,CAACI,GAAX,CAAgBC,CAAD,IAAO;AAC7B,iBAAO;AACLC,YAAAA,KAAK,EAAED,CAAC,CAACC,KADJ;AAELC,YAAAA,QAAQ,EAAEF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBC;AAFvB,WAAP;AAID,SALQ,CAAT;AAOA,aAAKC,QAAL,CAAc;AAAEC,UAAAA,MAAM,EAAEb;AAAV,SAAd;AACD,OA9BH,EA+BGc,KA/BH,CA+BUC,GAAD,IAASZ,OAAO,CAACC,GAAR,CAAYW,GAAZ,CA/BlB;AAgCD,KAzDkB;;AAAA,SA2DnBC,SA3DmB,GA2DNV,CAAD,IAAO;AACjB;AACA,WAAKM,QAAL,CAAc;AAAEjB,QAAAA,MAAM,EAAEW,CAAC,CAACW,MAAF,CAASC;AAAnB,OAAd;AACD,KA9DkB;;AAAA,SAgEnBC,eAhEmB,GAgEAb,CAAD,IAAO;AACvB;AACA,WAAKM,QAAL,CAAc;AAAElB,QAAAA,QAAQ,EAAE;AAAZ,OAAd,EAAsC,KAAKP,QAA3C;AACD,KAnEkB;;AAAA,SAqEnBiC,WArEmB,GAqEJd,CAAD,IAAO;AACnB;AACA,WAAKM,QAAL,CAAc;AAAElB,QAAAA,QAAQ,EAAE;AAAZ,OAAd,EAAwC,KAAKP,QAA7C;AACD,KAxEkB;;AAAA,SA0EnBkC,SA1EmB,GA0EP,MAAM;AAChB;AACA,WAAKT,QAAL,CAAc;AAAElB,QAAAA,QAAQ,EAAE;AAAZ,OAAd,EAAsC,KAAKP,QAA3C;AACD,KA7EkB;;AAAA,SA+EnBmC,WA/EmB,GA+EJhB,CAAD,IAAO;AACnB,WAAKM,QAAL,CAAc;AAAElB,QAAAA,QAAQ,EAAEY,CAAC,CAACW,MAAF,CAASC;AAArB,OAAd,EAA4C,KAAK/B,QAAjD;AACD,KAjFkB;;AAEjB,SAAKM,KAAL,GAAa;AACXE,MAAAA,MAAM,EAAE,EADG;AAEXkB,MAAAA,MAAM,EAAE,EAFG;AAGXnB,MAAAA,QAAQ,EAAE,EAHC,CAGG;AACd;;AAJW,KAAb;AAMD;;AA2ED6B,EAAAA,MAAM,GAAG;AACP,wBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,QAAQ,EAAE,KAAKP,SAFjB;AAGE,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWE,MAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME;AAAQ,MAAA,OAAO,EAAE,KAAK2B,WAAtB;AAAmC,MAAA,KAAK,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF,eASE;AAAQ,MAAA,OAAO,EAAE,KAAKA,WAAtB;AAAmC,MAAA,KAAK,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBATF,eAYE;AAAQ,MAAA,OAAO,EAAE,KAAKA,WAAtB;AAAmC,MAAA,KAAK,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAZF,CADF,eAiBE,oBAAC,OAAD;AACE,MAAA,MAAM,EAAE,KAAK7B,KAAL,CAAWE,MADrB;AAEE,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWoB,MAFrB;AAGE,MAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWC,QAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,CADF;AAyBD;;AA9GiC;;AAiHpC,eAAeV,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport GifCard from \"./GifCard\";\n//import GifCard from \"./components/GifCard\";\n\nclass SearchField extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      result: [],\n      filterBy: \"\", //regular, trending, random\n      //gifs: []\n    };\n  }\n\n  getGiphy = () => {\n    /* Calls the giphy API and sends the correct URL \n    based on which button the user interacts with*/\n    const API_KEY = process.env.REACT_APP_GIPHY_API_KEY; // API key\n    let regSearch; // URL to send to API\n\n    // Filtering through state.filterBy to send correct URL\n    if (this.state.filterBy === \"search\") {\n      regSearch = `http://api.giphy.com/v1/gifs/search?q=${this.state.search}&api_key=${API_KEY}`;\n    } else if (this.state.filterBy === \"trending\") {\n      regSearch = `http://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}`;\n    } else {\n      regSearch = `http://api.giphy.com/v1/gifs/random?api_key=${API_KEY}`;\n    }\n\n    axios // Sending request to the API\n      .get(regSearch)\n      .then((response) => {\n        let data = response.data;\n        let newGif, currentGif;\n        currentGif = []; // Array to hold the response from API\n        if (this.state.filterBy === \"random\") {\n          /* The random URL returns one object while the search and \n          trending return an array of objects, so we push that one object \n          into an array to keep the response as an array through \n          the whole program*/\n          currentGif.push(data.data);\n          console.log(\"ok....\", data);\n        } else {\n          // Pushing each object to currentGif array\n          data.data.map((e) => {\n            return currentGif.push(e);\n          });\n        }\n\n        /* Retreiving title and imageURL from each object \n        and pushing into a newGif array */\n        newGif = currentGif.map((e) => {\n          return {\n            title: e.title,\n            imageUrl: e.images.original.url,\n          };\n        });\n\n        this.setState({ result: newGif });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  setSearch = (e) => {\n    // Sets the search state to text value\n    this.setState({ search: e.target.value });\n  };\n\n  setSearchFilter = (e) => {\n    // Sets the filterBy state to 'search'\n    this.setState({ filterBy: \"search\" }, this.getGiphy);\n  };\n\n  setTrending = (e) => {\n    // Sets the filterBy state to 'trending'\n    this.setState({ filterBy: \"trending\" }, this.getGiphy);\n  };\n\n  setRandom = () => {\n    // Sets the filterBy state to 'trending'\n    this.setState({ filterBy: \"random\" }, this.getGiphy);\n  };\n\n  setFilterBy = (e) => {\n    this.setState({ filterBy: e.target.value }, this.getGiphy);\n  };\n\n  render() {\n    return (\n      <>\n        <div>\n          <input\n            type=\"textarea\"\n            onChange={this.setSearch}\n            value={this.state.search}\n          />\n          <button onClick={this.setFilterBy} value=\"search\">\n            Regular Search\n          </button>\n          <button onClick={this.setFilterBy} value=\"trending\">\n            Trending Search\n          </button>\n          <button onClick={this.setFilterBy} value=\"random\">\n            Random Search\n          </button>\n        </div>\n        <GifCard\n          search={this.state.search}\n          result={this.state.result}\n          filterBy={this.state.filterBy}\n        />\n      </>\n    );\n  }\n}\n\nexport default SearchField;\n"]},"metadata":{},"sourceType":"module"}